// import gsap from 'gsap';
// import { useRef, useEffect } from 'react';

// export const splitTextToFit = (textElement: HTMLElement, maxWidth: number): HTMLElement[] => {
//   const fontSize: number = parseInt(window.getComputedStyle(textElement).fontSize);
//   const fullText: string = textElement.innerText;
//   const words: string[] = fullText.split(' ');

//   let currentLine: string = '';
//   const lines: string[] = [];

//   words.forEach((word, index) => {
//     const testLine = currentLine.length === 0 ? word : `${currentLine} ${word}`;
//     const testWidth = getTextWidth(testLine, fontSize);

//     if (testWidth <= maxWidth) {
//       currentLine = testLine;
//     } else {
//       lines.push(currentLine);
//       currentLine = word;
//     }

//     if (index === words.length - 1) {
//       lines.push(currentLine);
//     }
//   });

//   const lineElements: HTMLElement[] = lines.map((line, i) => {
//     const lineElement = document.createElement('div');
//     lineElement.className = `line line-${i}`;
//     lineElement.innerText = line;
//     return lineElement;
//   });

//   // Clear original text and append the new line elements
//   textElement.innerHTML = '';
//   lineElements.forEach((lineElement) => {
//     textElement.appendChild(lineElement);
//   });

//   return lineElements;
// };

// function getTextWidth(text: string, fontSize: number): number {
//   const canvas: HTMLCanvasElement = document.createElement('canvas');
//   const context: CanvasRenderingContext2D | null = canvas.getContext('2d');
//   if (!context) {
//     throw new Error('Canvas context not supported.');
//   }
//   context.font = `${fontSize}px Arial`;
//   const width: number = context.measureText(text).width;
//   return width;
// }

// // Example animation setup
// export function animateHeaderText(headerTextRef: React.RefObject<HTMLHeadingElement>) {
//   if (headerTextRef.current) {
//     const splitLines: HTMLElement[] = splitTextToFit(headerTextRef.current, 500);
//     console.log(splitLines);
//     if (splitLines.length > 0) {
//       gsap.fromTo(
//         splitLines,
//         { opacity: 0, y: 32 },
//         {
//           opacity: 1,
//           y: 0,
//           stagger: 2,
//           duration: 1,
//           ease: 'cubic-bezier(0.7, 0, 0.25, 1)',
//           delay: 0.5,
//         },
//       );
//     }
//   }
// }

// // Usage example in React component
// // const YourComponent: React.FC = () => {
// //     const headerTextRef = useRef<HTMLHeadingElement>(null);

// //     useEffect(() => {
// //         animateHeaderText(headerTextRef);
// //     }, []);

// //     return (
// //         <h1 ref={headerTextRef}>DevFest Lagos is Back,</h1>
// //     );
